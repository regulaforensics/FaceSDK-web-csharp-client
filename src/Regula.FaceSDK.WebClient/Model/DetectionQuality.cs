/*
 * Regula FaceSDK Web API
 *
 * [Download OpenAPI specification](https://github.com/regulaforensics/FaceSDK-web-openapi) ### Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core 
 *
 * The version of the OpenAPI document: 6.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Regula.FaceSDK.WebClient.Client.OpenAPIDateConverter;

namespace Regula.FaceSDK.WebClient.Model
{
    /// <summary>
    /// Field for checking the portrait quality. If it is not mentioned, no quality check is performed.
    /// </summary>
    [DataContract(Name = "Detection_quality")]
    public partial class DetectionQuality : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DetectionQuality" /> class.
        /// </summary>
        /// <param name="nonCompliant">The array of all the non-compliant assessment characteristics..</param>
        /// <param name="detailsGroups">The array of the assessment results for each group of characteristics..</param>
        /// <param name="details">The array of the assessment characteristics that were set in the request..</param>
        /// <param name="score">Returns the estimated portrait quality assessment result, a number from 0 to 1, where 1 is for absolute compliance..</param>
        /// <param name="timer">The total time the quality assessment has taken..</param>
        public DetectionQuality(List<FaceQualityConfigName> nonCompliant = default(List<FaceQualityConfigName>), List<QualityDetailsGroups> detailsGroups = default(List<QualityDetailsGroups>), List<QualityDetail> details = default(List<QualityDetail>), float score = default(float), float timer = default(float))
        {
            this.NonCompliant = nonCompliant;
            this.DetailsGroups = detailsGroups;
            this.Details = details;
            this.Score = score;
            this.Timer = timer;
        }

        /// <summary>
        /// The array of all the non-compliant assessment characteristics.
        /// </summary>
        /// <value>The array of all the non-compliant assessment characteristics.</value>
        /// <example>[&quot;ImageWidthToHeight&quot;,&quot;Yaw&quot;]</example>
        [DataMember(Name = "nonCompliant", EmitDefaultValue = false)]
        public List<FaceQualityConfigName> NonCompliant { get; set; }

        /// <summary>
        /// The array of the assessment results for each group of characteristics.
        /// </summary>
        /// <value>The array of the assessment results for each group of characteristics.</value>
        [DataMember(Name = "detailsGroups", EmitDefaultValue = false)]
        public List<QualityDetailsGroups> DetailsGroups { get; set; }

        /// <summary>
        /// The array of the assessment characteristics that were set in the request.
        /// </summary>
        /// <value>The array of the assessment characteristics that were set in the request.</value>
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public List<QualityDetail> Details { get; set; }

        /// <summary>
        /// Returns the estimated portrait quality assessment result, a number from 0 to 1, where 1 is for absolute compliance.
        /// </summary>
        /// <value>Returns the estimated portrait quality assessment result, a number from 0 to 1, where 1 is for absolute compliance.</value>
        /// <example>-1.0</example>
        [DataMember(Name = "score", EmitDefaultValue = false)]
        public float Score { get; set; }

        /// <summary>
        /// The total time the quality assessment has taken.
        /// </summary>
        /// <value>The total time the quality assessment has taken.</value>
        /// <example>0.420364111661911</example>
        [DataMember(Name = "timer", EmitDefaultValue = false)]
        public float Timer { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DetectionQuality {\n");
            sb.Append("  NonCompliant: ").Append(NonCompliant).Append("\n");
            sb.Append("  DetailsGroups: ").Append(DetailsGroups).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("  Timer: ").Append(Timer).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
